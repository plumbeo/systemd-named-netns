#!/bin/sh

is_netns() {
	local ns_name="$1"
	if [ ! -z "${ns_name}" ]; then
		ip netns list | sed 's/ *(id: [0-9]\+)$//' | grep --quiet --fixed-string --line-regexp "${ns_name}"
		return $?
	else
		return 1
	fi
}

is_interface() {
	local interface="$1"
	if [ ! -z "${interface}" ]; then
		ip link show "${interface}" > /dev/null 2>&1
		return $?
	else
		return 1
	fi
}

if [ -z "$1" ]; then
        echo "Usage: $0 <netns> <interface1> <interface2> ..."
        exit 1
fi

ns_name="$1"
shift
if_list="$@"

if ! is_netns "${ns_name}"; then
	echo "${ns_name} is not a valid network namespace."
	echo
	echo "Usage: $0 <netns> <interface1> <interface2> ..."
	exit 1
fi

for if_name in $if_list; do
	if ! is_interface "${if_name}"; then
		echo "${if_name} is not a valid interface."
		echo "Usage: $0 <netns> <interface1> <interface2> ..."
		exit 1
	fi
done

for if_name in $if_list; do
	if_addr=$(ip -f inet addr show ${if_name} | grep -Po 'inet \K[\d./]+')

	ip link set netns ${ns_name} dev ${if_name} > /dev/null 2>&1
	if [ $? -ne 0 ]; then
		echo "Error when moving interface ${if_name} to namespace ${ns_name}."
		continue
	fi

	for addr in $if_addr; do
		ip -n ${ns_name} addr add $addr dev ${if_name} > /dev/null 2>&1
		if [ $? -ne 0 ]; then
			echo "Error when adding address ${addr} to interface ${if_name} in namespace ${ns_name}."
			continue
		fi
	done

	ip -n ${ns_name} link set ${if_name} up > /dev/null 2>&1
	if [ $? -ne 0 ]; then
		echo "Error when activating interface ${if_name} in namespace ${ns_name}."
		continue
	fi
done
